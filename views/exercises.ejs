<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/output.css" />

    <title>Exercises | Calisthenics Matrix</title>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=VT323&display=swap");
      body {
        background-color: #0f140f;
        /* opacity: 0.25; */
        background-image: radial-gradient(#007a021a 1px, transparent 1px),
          radial-gradient(#007a021a 1px, #0f140f 1px);
        background-size: 10px 10px;
        background-position: 0 0, 20px 2px;
        font-family: "VT323", monospace;
        color: white;
      }
    </style>
  </head>
  <body class="">
    <%- include('./components/header.ejs') %>
    <div
      class="CONTENT z-40 p-[1.75rem] flex flex-col justify-center items-center md:items-start mx-auto px-5 lg:flex-row md:mt-14 lg:gap-9 lg:max-w-6xl"
    >
      <!-- options -->
      <div class="max-w-72 md:max-w-96 mb-8 w-full flex flex-col gap-4 mx-auto">
        <form
          class="w-full h-9 md:h-12 MatrixBoxEffectWhiteLow MatrixTextEffectWhiteLow relative flex selectionHoverLow transition"
          id="searchForm"
          name="searchForm"
        >
          <input
            class="text-2xl md:text-3xl ml-4 bg-transparent w-full"
            placeholder="Search..."
            name="searchQuery"
            id="searchInput"
          />
          <button type="submit" class="cursor-pointer">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              height="28px"
              viewBox="0 -960 960 960"
              width="28px"
              fill="#5f6368"
              id="searchSvg"
              class="MatrixSVGEffectWhite absolute top-[50%] translate-y-[-50%] right-[1rem]"
            >
              <path
                d="M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z"
                class="MatrixSVGEffectWhite"
              />
            </svg>
          </button>
        </form>

        <!-- difficulty start -->
        <div
          class="w-full h-9 md:h-12 MatrixBoxEffectWhiteLow MatrixTextEffectWhiteLow relative flex items-center selectionHoverLow transition"
          onclick="toggleDifficultiesForm()"
        >
          <p class="text-2xl md:text-3xl ml-4">Filter by difficuly</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            height="28px"
            viewBox="0 -960 960 960"
            width="28px"
            fill="#5f6368"
            class="MatrixSVGEffectWhite absolute top-[50%] translate-y-[-50%] right-[1rem]"
          >
            <path
              d="M400-240v-80h160v80H400ZM240-440v-80h480v80H240ZM120-640v-80h720v80H120Z"
              class="MatrixSVGEffectWhite transition"
            />
          </svg>
        </div>
        <form action="" class="hidden" id="difficulyForm">
          <ul class="grid w-full gap-6 md:grid-cols-3">
            <% difficulties.map(difficulty => {%> <%-
            include('./components/option.ejs', {option: difficulty.name, value:
            difficulty.id, filterType: "difficulty"}) %> <%})%>
            <button
              type="submit"
              class="col-span-3 MatrixBoxEffectGrey w-full p-3 rounded-sm cursor-pointer selectionHoverLow"
            >
              Filter
            </button>
          </ul>
        </form>
        <!-- difficulty end -->

        <!-- category start -->
        <div
          class="w-full h-9 md:h-12 MatrixBoxEffectWhiteLow MatrixTextEffectWhiteLow relative flex items-center selectionHoverLow transition"
          onclick="toggleCategoryForm()"
        >
          <p class="text-2xl md:text-3xl ml-4">Filter by category</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            height="28px"
            viewBox="0 -960 960 960"
            width="28px"
            fill="#5f6368"
            class="MatrixSVGEffectWhite absolute top-[50%] translate-y-[-50%] right-[1rem]"
          >
            <path
              d="M400-240v-80h160v80H400ZM240-440v-80h480v80H240ZM120-640v-80h720v80H120Z"
              class="MatrixSVGEffectWhite"
            />
          </svg>
        </div>
        <form
          action="/exercises/"
          method="GET"
          class="hidden"
          id="categoryForm"
        >
          <ul class="grid w-full gap-6 md:grid-cols-3">
            <% categories.map(category => {%> <%-
            include('./components/option.ejs', {option: category.name, value:
            category.id, filterType: "category"}) %> <%})%>
            <button
              type="submit"
              class="col-span-3 MatrixBoxEffectGrey w-full p-3 rounded-sm cursor-pointer selectionHoverLow"
            >
              Filter
            </button>
          </ul>
        </form>
        <!-- category end -->
      </div>
      <!-- exercises -->
      <div class="w-full mx-auto text-center">
        <h1
          class="text-3xl MatrixTextEffectLow <%= filterSettings ? '' : 'mb-8'%> md:text-4xl"
        >
          <%= filterPhrase%>
        </h1>
        <%if (filterSettings){%>
        <h1 class="text-2xl MatrixTextEffectWhiteLow mb-8 md:text-3xl">
          <%= filterSettings%>
        </h1>
        <%}%>
        <div
          class="grid w-full grid-cols-2 gap-y-3 gap-x-3 max-w-[26.5rem] md:grid-cols-3 md:max-w-2xl mx-auto"
        >
          <% exercises.map((exercise, i) => { %> <%-
          include('./components/allExercisesComponent.ejs', {index: i + 1, link:
          exercise.video_url, name: exercise.name, ytToImg: ytToImg}) %> <%})%>
        </div>
      </div>
    </div>

    <script defer>
      const input = document.getElementById("searchInput");
      const searchSvg = document.getElementById("searchSvg");
      const searchForm = document.getElementById("searchForm");
      input.addEventListener("keyup", (e) => {
        if (e.target.value !== "") {
          searchSvg.classList.add("blink");
          searchForm.classList.add("selectionHoverManual");
        } else {
          searchForm.classList.remove("selectionHoverManual");
          searchSvg.classList.remove("blink");
        }
      });

      const lis = document.querySelectorAll("li");
      lis.forEach((li) => {
        const input = li.querySelector("input");
        const label = li.querySelector("label");

        input.addEventListener("change", (e) => {
          label.classList.toggle("selectionHoverManual");
        });
      });

      const toggleDifficultiesForm = () => {
        const form = document.getElementById("difficulyForm");
        form.classList.toggle("hidden");
      };

      const toggleCategoryForm = () => {
        const form = document.getElementById("categoryForm");
        form.classList.toggle("hidden");
      };
    </script>
  </body>
</html>
